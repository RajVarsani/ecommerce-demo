swagger: "2.0"
info:
  version: 1.0.0
  title: ecommerce Demo
  description: My cool app
basePath: /api/v1
tags:
  - name: Customer
    description: Customer endpoints
  - name: Field
    description: Input field endpoints
  - name: Specification
    description: The swagger API specification

consumes:
  - application/json
produces:
  - application/json

definitions:
  CustomerBody:
    type: object
    title: customer
    required:
      - email
      - acType
      - name
      - address
      - phone
      - dob
    properties:
      email:
        type: string
        description: customer email
        example: test@testmail.co
      acType:
        type: string
        description: customer account type
        example: electronics
        enum:
          - electronics
          - toys
      name:
        type: string
        description: customer name
        example: "John Doe"
      address:
        type: string
        description: customer address
        example: "123 Main St"
      phone:
        type: string
        description: customer phone number
        example: "1234567890"
      dob:
        type: string
        description: customer date of birth
        example: "01/01/1990"
  FieldBody:
    type: object
    title: field
    required:
      - name
      - type
    properties:
      name:
        type: string
        description: field name
        example: "name"
      type:
        type: string
        description: field type
        example: "text"

paths:
  /customer:
    post:
      tags:
        - Customer
      description: Create a new Customer
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/CustomerBody"
      responses:
        200:
          description: Returns customer created
        422:
          description: Invalid customer data provided

    get:
      tags:
        - Customer
      description: Fetch customers list according to the query
      parameters:
        - name: type
          in: query
          description: Account type of customers to fetch
          required: true
          type: string
          enum:
            - electronics
            - toys
      responses:
        200:
          description: Returns customers by account type

  /customer/{id}:
    get:
      tags:
        - Customer
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the customer to fetch
          type: string
      responses:
        200:
          description: Return the customer with the given id
        404:
          description: Customer with the given id not found

  /field:
    post:
      tags:
        - Field
      description: Create a new Field
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/FieldBody"
      responses:
        200:
          description: Returns field created
        422:
          description: Invalid field data provided

    get:
      tags:
        - Field
      description: Fetch fields list
      responses:
        200:
          description: Returns fields list

  /spec:
    get:
      tags:
        - Specification
      responses:
        200:
          description: Return the API specification
